# Auto-generated by lucicfg.
# Do not modify manually.
#
# For the schema of this file, see RealmsCfg message:
#   https://luci-config.appspot.com/schemas/projects:realms.cfg

realms {
  name: "@root"
  bindings {
    role: "role/buildbucket.owner"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "user:coordinator-builder@golang-ci-luci.iam.gserviceaccount.com"
    principals: "user:security-coordinator-builder@golang-ci-luci.iam.gserviceaccount.com"
    principals: "user:tricium-prod@appspot.gserviceaccount.com"
  }
  bindings {
    role: "role/configs.developer"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/configs.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/cq.committer"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/resultdb.invocationCreator"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/scheduler.owner"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/swarming.poolOwner"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/swarming.poolUser"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:mdb/golang-luci-admin"
  }
  bindings {
    role: "role/swarming.taskTriggerer"
    principals: "group:mdb/golang-luci-admin"
  }
}
realms {
  name: "ci"
  bindings {
    role: "role/buildbucket.builderServiceAccount"
    principals: "user:coordinator-builder@golang-ci-luci.iam.gserviceaccount.com"
    principals: "user:public-worker-builder@golang-ci-luci.iam.gserviceaccount.com"
  }
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
realms {
  name: "pools/ci"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
realms {
  name: "pools/ci-workers"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
realms {
  name: "pools/prod"
}
realms {
  name: "pools/security-try"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
}
realms {
  name: "pools/security-try-workers"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
}
realms {
  name: "pools/shared-workers"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
realms {
  name: "pools/try"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
realms {
  name: "pools/try-workers"
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
realms {
  name: "prod"
  bindings {
    role: "role/buildbucket.builderServiceAccount"
    principals: "user:recipe-bundler@golang-ci-luci.iam.gserviceaccount.com"
  }
}
realms {
  name: "security-try"
  bindings {
    role: "role/buildbucket.builderServiceAccount"
    principals: "user:security-coordinator-builder@golang-ci-luci.iam.gserviceaccount.com"
    principals: "user:security-worker-builder@golang-ci-luci.iam.gserviceaccount.com"
  }
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:mdb/golang-release-eng-policy"
    principals: "group:mdb/golang-security-policy"
  }
}
realms {
  name: "try"
  bindings {
    role: "role/buildbucket.builderServiceAccount"
    principals: "user:coordinator-builder@golang-ci-luci.iam.gserviceaccount.com"
    principals: "user:luci-task@golang-ci-luci.iam.gserviceaccount.com"
    principals: "user:public-worker-builder@golang-ci-luci.iam.gserviceaccount.com"
  }
  bindings {
    role: "role/buildbucket.reader"
    principals: "group:all"
  }
  bindings {
    role: "role/buildbucket.triggerer"
    principals: "group:mdb/golang-team"
    principals: "group:project-golang-approvers"
    principals: "group:project-golang-may-start-trybots"
  }
  bindings {
    role: "role/swarming.poolViewer"
    principals: "group:all"
  }
}
